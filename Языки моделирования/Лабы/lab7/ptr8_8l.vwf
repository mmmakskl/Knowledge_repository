/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2005 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic       
functions, and any output files any of the foregoing           
(including device programming or simulation files), and any    
associated documentation or information are expressly subject  
to the terms and conditions of the Altera Program License      
Subscription Agreement, Altera MegaCore Function License       
Agreement, or other applicable license agreement, including,   
without limitation, that your use is for the sole purpose of   
programming logic devices manufactured by Altera and sold by   
Altera or its authorized distributors.  Please refer to the    
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 40.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ei")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("r[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

SIGNAL("r[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "r";
}

TRANSITION_LIST("ei")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1000;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("r[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
			NODE
			{
				REPEAT = 96;
				LEVEL 0 FOR 5120.0;
				LEVEL 1 FOR 5120.0;
			}
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("r[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2560.0;
			LEVEL 1 FOR 2560.0;
			NODE
			{
				REPEAT = 194;
				LEVEL 0 FOR 2560.0;
				LEVEL 1 FOR 2560.0;
			}
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("r[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
			NODE
			{
				REPEAT = 389;
				LEVEL 0 FOR 1280.0;
				LEVEL 1 FOR 1280.0;
			}
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 320.0;
		}
	}
}

TRANSITION_LIST("r[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			NODE
			{
				REPEAT = 780;
				LEVEL 0 FOR 640.0;
				LEVEL 1 FOR 640.0;
			}
			LEVEL 0 FOR 320.0;
		}
	}
}

TRANSITION_LIST("r[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			NODE
			{
				REPEAT = 1561;
				LEVEL 0 FOR 320.0;
				LEVEL 1 FOR 320.0;
			}
			LEVEL 0 FOR 320.0;
		}
	}
}

TRANSITION_LIST("r[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			NODE
			{
				REPEAT = 3123;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("r[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			NODE
			{
				REPEAT = 6248;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("r[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 12498;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "ei";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "r[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 33350;
	MASTER = TRUE;
}
;
